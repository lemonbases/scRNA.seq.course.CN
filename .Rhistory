library("bookdown")
serve_book(dir=".",output_dir = "_book",preview = TRUE,
in_session = TRUE, quiet = FALSE)
install.packages("servr")
serve_book(dir=".",output_dir = "_book",preview = TRUE,
in_session = TRUE, quiet = FALSE)
library("bookdown")
serve_book(dir=".",output_dir = "_book",preview = TRUE,
in_session = TRUE, quiet = FALSE)
servr::daemon_stop(1)
serve_book(dir=".",output_dir = "_book",preview = TRUE,
in_session = TRUE, quiet = FALSE)
serve_book(dir=".",output_dir = "_book",preview = TRUE,
in_session = TRUE, quiet = FALSE)
servr::daemon_stop(1)
serve_book(dir=".",output_dir = "_book",preview = TRUE,
servr::daemon_stop(1)
serve_book(dir=".",output_dir = "_book",preview = TRUE,
in_session = TRUE, quiet = FALSE)
library(bookdown)
in_session = TRUE, quiet = FALSE)
serve_book(dir=".",output_dir = "_book",preview = TRUE,
in_session = TRUE, quiet = FALSE)
servr::daemon_stop(1)
serve_book(dir=".",output_dir = "_book",preview = TRUE,
in_session = TRUE, quiet = FALSE)
knitr::include_graphics("figures/ziegenhainEnardFig1.png")
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
knitr::include_graphics("figures/svenssonTeichmannFig2.png")
library(bookdown)
serve_book(dir=".",output_dir = "../lemonbases.github.io",preview = TRUE,
in_session = TRUE, quiet = FALSE)
servr::daemon_stop(1)
serve_book(dir=".",output_dir = "../lemonbases.github.io/scRNA.seq.course.CN",preview = TRUE,
in_session = TRUE, quiet = FALSE)
servr::daemon_stop(1)
serve_book(dir=".",output_dir = "../lemonbases.github.io/scRNA.seq.course.CN",preview = TRUE,
in_session = TRUE, quiet = FALSE)
library("mixtools")
install.packages("mixtools")
library("mixtools")
library("bookdown")
serve_book(dir=".",output_dir = "../lemonbases.github.io/scRNA.seq.course.CN",preview = TRUE,
in_session = TRUE, quiet = FALSE)
servr::daemon_stop(1)
library('bookdown')
library('bookdown')
serve_book(dir=".",output_dir = "../lemonbases.github.io/scRNA.seq.course.CN",preview = TRUE,
in_session = TRUE, quiet = FALSE)
require("Matrix")
require("DropletUtils")
install.packages("DropletUtils")
chooseBioCmirror()
BiocManager::install("DropletUtils")
install.packages("BiocManager")
BiocManager::install(version='devel')
BiocManager::install("DropletUtils")
pws
pwd
require("DropletUtils")
e.out <- emptyDrops(my.counts)
?DripleUtils
??DripleUtils
require("Matrix")
raw.counts <- readRDS("data/droplet_id_example.rds")
require("DropletUtils")
library(DropletUtils)
set.seed(100)
e.out <- emptyDrops(my.counts)
servr::daemon_stop(1)
serve_book(dir=".",output_dir = "../lemonbases.github.io/scRNA.seq.course.CN",preview = TRUE,
in_session = TRUE, quiet = FALSE)
run servr::daemon_stop(3)
servr::daemon_stop(3)
servr::daemon_stop(2)
servr::daemon_stop(1)
serve_book(dir=".",output_dir = "../lemonbases.github.io/scRNA.seq.course.CN",preview = TRUE,
in_session = TRUE, quiet = FALSE)
install.packages("mvoutlier")
uni
umi
library(bookdown)
serve_book(dir=".",output_dir = "../lemonbases.github.io/scRNA.seq.course.CN",preview = TRUE,
in_session = TRUE, quiet = FALSE)
servr::daemon_stop(1)
servr::daemon_stop(1)
servr::daemon_stop(2)
serve_book(dir=".",output_dir = "../lemonbases.github.io/scRNA.seq.course.CN",preview = TRUE,
in_session = TRUE, quiet = FALSE)
servr::daemon_stop(1)
serve_book(dir=".",output_dir = "../lemonbases.github.io/scRNA.seq.course.CN",preview = TRUE,
in_session = TRUE, quiet = FALSE)
